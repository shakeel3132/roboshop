version: "3.9"
networks:
  roboshop:
    driver: bridge
volumes:
# This is equivalent to docker volume create [volume-name]. these are named volumes
  mysql:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/ubuntu/mysql
  redis:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/ubuntu/redis
  rabbitmq:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/ubuntu/rabbitmq
  mongodb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/ubuntu/mongodb

services:
  web:
    image: web:v1
    container_name: web
    ports:
    - "7080:7080"
    depends_on:
    - catalogue
    - user
    - cart
    - mysql
    - shipping
  mongodb:
    image: mongodb:v1
    container_name: mongodb
    volumes:
    - mongodb:/data/db
  catalogue:
    image: catalogue:v1
    container_name: catalogue
    ports:
    - "7081:7081"
    depends_on:
    - mongodb
  redis:
    image: redis
    container_name: redis
    volumes:
    - redis:/data
  user:
    image: user:v1
    container_name: user
    ports:
    - "7082:7082"
    depends_on:
    - mongodb
    - redis
  cart:
    image: cart:v1
    container_name: cart
    ports:
    - "7083:7083"
    depends_on:
    - redis
    - catalogue
  mysql:
    image: mysql:v1
    container_name: mysql
    volumes:
    - mysql:/var/lib/mysql
  shipping:
    image: shipping:v1
    container_name: shipping
    ports:
    - "7084:7084"
    depends_on:
    - mysql
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    volumes:
    - rabbitmq:/var/lib/rabbitmq
  payment:
    image: payment:v1
    container_name: payment
    ports:
    - "7085:7085"
    depends_on:
    - rabbitmq
  ratings:
    image: ratings:v1
    container_name: ratings
    ports:
    - "7086:7086"
    depends_on:
    - mysql


